#!/bin/bash
#
#  Command Line Interface to start all services associated with the Tutorial
#
#  For this tutorial the commands are merely a convenience script to run docker or docker-compose
#
#  Each services script can be run using either docker-compose (the external tool with the hyphen -) 
#  or docker compose (the newer version directly bundled with Docker with a space )
#
#  if you start up with the following command:
#
#  ./services start legacy
#
# This will force the script to use docker-compose which may be more reliable in 
# some cases (or if an older version of Docker is being used)

set -e

dockerCmd="docker compose"
if (( $# == 2 )); then
    dockerCmd="docker-compose"
fi

if (( $# < 1 )); then
    echo "Illegal number of parameters"
    echo "usage: services [create|cygnus|sth-comet|stop]"
    exit 1
fi

stoppingContainers () {
	echo "Stopping running containers"
	${dockerCmd} -f docker-compose/orion-cygnus-sth-comet.yml down -v --remove-orphans
}

displayServices () {
	echo ""
	docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" --filter name=fiware-*
	(gp ports list 2> /dev/null) || true 
	echo ""
}

waitForMongo () {
	echo -e "\n⏳ Waiting for \033[1mMongoDB\033[0m to be available\n"
	while ! [ `docker inspect --format='{{.State.Health.Status}}' db-mongo` == "healthy" ]
	do 
		sleep 1
	done
}

waitForOrion () {
	echo -e "\n⏳ Waiting for \033[1;34mOrion\033[0m to be available\n"

	while ! [ `docker inspect --format='{{.State.Health.Status}}' fiware-orion` == "healthy" ]
	do
	  echo -e "Context Broker HTTP state: " `curl -s -o /dev/null -w %{http_code} 'http://localhost:1026/version'` " (waiting for 200)"
	  sleep 1
	done
}

export $(cat .env | grep "#" -v)
command="$1"
case "${command}" in
	"help")
        echo "usage: services [create|cygnus|sth-comet|stop]"
        ;;
     "cygnus")
		stoppingContainers
		echo -e "Starting containers: \033[1;34mOrion\033[0m, \033[1;34mCygnus\033[0m, \033[1;34mSTH-Comet\033[0m  and a \033[1mMongoDB\033[0m database."	
		echo -e "- \033[1;34mOrion\033[0m is the context broker"
		echo -e "- \033[1;34mCygnus\033[0m is configured to write context data to Mongo-DB"
		echo -e "- \033[1;34mSTH-Comet\033[0m is reading context data from Mongo-DB"
		echo ""
		${dockerCmd} -f docker-compose/orion-cygnus-sth-comet.yml up -d --remove-orphans
		displayServices
		;;
	"stop")
		stoppingContainers
		;;
	"start")
		./services cygnus $2
		;;
	"create")
		echo "Pulling Docker images"
		docker pull -q quay.io/curl/curl
		${dockerCmd} -f docker-compose/orion-cygnus-sth-comet.yml  pull
		;;
	*)
		echo "Command not Found."
		echo "usage: services [create|cygnus|sth-comet|stop]"
		exit 127;
		;;
esac